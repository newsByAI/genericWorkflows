name: Build and Push Docker Image for Java App

on:
  workflow_call:
    secrets:
      GCP_SA_REGISTRY_MANAGER_CREDENTIALS:
        required: true
      GCP_PROJECT:
        required: true
    inputs:
      IMAGE_NAME:
        type: string
        required: true
      PROJECT_VERSION:
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_REGISTRY_MANAGER_CREDENTIALS }}

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          project_id: "${{ secrets.GCP_PROJECT }}"

      - name: "Use gcloud CLI"
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev

      - name: Set image tags
        run: |
          TIMESTAMP=$(date -u +'%Y%m%d-%H%M%S')
          BRANCH_NAME=$(echo "${GITHUB_REF##*/}" | tr '/' '-')
          echo "IMAGE_TAG=${BRANCH_NAME}-${TIMESTAMP}" >> $GITHUB_ENV

      - name: Build Docker images
        run: |
          IMAGE_PATH=${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          echo "Building image with tags:"
          echo "- latest"
          echo "- ${{ inputs.PROJECT_VERSION }}"
          echo "- ${{ env.IMAGE_TAG }}"
          docker build --build-arg PROJECT_VERSION=1.0.0 \
            -t $IMAGE_PATH:latest \
            -t $IMAGE_PATH:${{ inputs.PROJECT_VERSION }} \
            -t $IMAGE_PATH:${{ env.IMAGE_TAG }} .

      - name: List Docker images
        run: |
          IMAGE_PATH=${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          echo "Available images:"
          docker images | grep ${{ inputs.IMAGE_NAME }}

      - name: Push Docker images
        run: |
          IMAGE_PATH=${{ secrets.GCP_REGISTRY_ZONE }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/${{ vars.REGISTRY }}/${{ inputs.IMAGE_NAME }}
          echo "Pushing image with tags:"
          echo "- ${{ inputs.PROJECT_VERSION }}"
          docker push $IMAGE_PATH:${{ inputs.PROJECT_VERSION }}
          echo "- ${{ env.IMAGE_TAG }}"
          docker push $IMAGE_PATH:${{ env.IMAGE_TAG }}